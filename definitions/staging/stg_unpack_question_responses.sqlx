config {
    type: "view",
    assertions: {
        uniqueKey: ["survey_response_id", "question_id", "src_question_response_column_name", "choice_value"],
        nonNull: ["survey_response_id", "question_id", "src_question_response_column_name", "choice_value"],
        rowConditions: []
    },
}

  -- This table will have duplicate rows for multi-select responses



WITH
  bmg_all AS (
  SELECT
    survey_response_id,
    src_column_name,
    NULLIF(choice_value, '') AS choice_value
  FROM
    ${ref("stg_bmg_all_waves")}
  ),
  combined AS (
    SELECT 
    survey_response_id,
    src_column_name,
    choice_value
    FROM bmg_all 
    LEFT JOIN ${ref("stg_adding_topics_col")} as topics 
    on bmg_all.survey_response_id = topics.survey_response_id
  ),

  unpivoted as (

  SELECT 
    survey_response_id,
    src_column_name,
    choice_value
  FROM combined
  UNPIVOT
    (
      -- TODO: can we derive this list from the lookup somehow - seems brittle
      choice_value FOR src_column_name IN (ql5,
        ql7,
        ql7a_1,
        ql7a_2,
        ql7a_3,
        ql7a_4,
        ql7a_5,
        ql7a_6,
        ql7a_7,
        ql7a_8,
        ql1c_3,
        ql1c_3_1,
        ql1c_3_2,
        ql1a_1,
        ql1a_2,
        ql1a_3,
        ql1a_4,
        ql1a_5,
        ql1a_6,
        ql1a_7,
        ql1a_8,
        ql1a_9,
        ql1a_10,
        ql1a_11,
        ql1a_12,
        ql1a_13,
        ql1a_14,
        ql1a_15,
        ql1a_16,
        ql1a_17,
        ql1a_18,
        ql1a_19,
        ql1a_20,
        ql1a_96 
        )
    )
  )
SELECT
  survey_response_id,
  unpivoted.src_column_name AS src_question_response_column_name,
  questions_to_response_choice.question_id AS question_id,
  questions_to_response_choice.question_type,
  unpivoted.choice_value,
  questions_to_response_choice.choice_text
FROM
  unpivoted
LEFT JOIN
    ${ref("stg_src_column_to_question_response_choice_value")} questions_to_response_choice
    USING (src_column_name, choice_value)
WHERE
    questions_to_response_choice.question_type IN ('single', 'multi')
